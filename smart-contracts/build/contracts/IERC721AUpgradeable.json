{
  "contractName": "IERC721AUpgradeable",
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a-upgradeable/contracts/IERC721AUpgradeable.sol\":\"IERC721AUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a-upgradeable/contracts/IERC721AUpgradeable.sol\":{\"keccak256\":\"0xeadcde5a8b5a6d3721b11ac0a6c597b9cf93bb532de86c7a969d275103a71d19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d893cc168c2e056d17f68670b7a37e28a393388e4427fe97f2d880036ad658f\",\"dweb:/ipfs/QmUQjyP5SBPw8nUmEK7sDmnJgPaCxigMHBzfGYxUJ4KccS\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.1.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721AUpgradeable {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set through `_extraData`.\n        uint24 extraData;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     *\n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // ==============================\n    //            IERC165\n    // ==============================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // ==============================\n    //            IERC721\n    // ==============================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // ==============================\n    //        IERC721Metadata\n    // ==============================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // ==============================\n    //            IERC2309\n    // ==============================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n     * as defined in the ERC2309 standard. See `_mintERC2309` for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n",
  "sourcePath": "erc721a-upgradeable\\contracts\\IERC721AUpgradeable.sol",
  "ast": {
    "absolutePath": "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol",
    "exportedSymbols": {
      "IERC721AUpgradeable": [
        8418
      ]
    },
    "id": 8419,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8211,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:23:36"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8212,
          "nodeType": "StructuredDocumentation",
          "src": "109:59:36",
          "text": " @dev Interface of an ERC721A compliant contract."
        },
        "fullyImplemented": false,
        "id": 8418,
        "linearizedBaseContracts": [
          8418
        ],
        "name": "IERC721AUpgradeable",
        "nameLocation": "179:19:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 8213,
              "nodeType": "StructuredDocumentation",
              "src": "205:76:36",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 8215,
            "name": "ApprovalCallerNotOwnerNorApproved",
            "nameLocation": "292:33:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:36"
            },
            "src": "286:42:36"
          },
          {
            "documentation": {
              "id": 8216,
              "nodeType": "StructuredDocumentation",
              "src": "334:44:36",
              "text": " The token does not exist."
            },
            "id": 8218,
            "name": "ApprovalQueryForNonexistentToken",
            "nameLocation": "389:32:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:2:36"
            },
            "src": "383:41:36"
          },
          {
            "documentation": {
              "id": 8219,
              "nodeType": "StructuredDocumentation",
              "src": "430:66:36",
              "text": " The caller cannot approve to their own address."
            },
            "id": 8221,
            "name": "ApproveToCaller",
            "nameLocation": "507:15:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:36"
            },
            "src": "501:24:36"
          },
          {
            "documentation": {
              "id": 8222,
              "nodeType": "StructuredDocumentation",
              "src": "531:65:36",
              "text": " Cannot query the balance for the zero address."
            },
            "id": 8224,
            "name": "BalanceQueryForZeroAddress",
            "nameLocation": "607:26:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:36"
            },
            "src": "601:35:36"
          },
          {
            "documentation": {
              "id": 8225,
              "nodeType": "StructuredDocumentation",
              "src": "642:51:36",
              "text": " Cannot mint to the zero address."
            },
            "id": 8227,
            "name": "MintToZeroAddress",
            "nameLocation": "704:17:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:2:36"
            },
            "src": "698:26:36"
          },
          {
            "documentation": {
              "id": 8228,
              "nodeType": "StructuredDocumentation",
              "src": "730:72:36",
              "text": " The quantity of tokens minted must be more than zero."
            },
            "id": 8230,
            "name": "MintZeroQuantity",
            "nameLocation": "813:16:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:36"
            },
            "src": "807:25:36"
          },
          {
            "documentation": {
              "id": 8231,
              "nodeType": "StructuredDocumentation",
              "src": "838:44:36",
              "text": " The token does not exist."
            },
            "id": 8233,
            "name": "OwnerQueryForNonexistentToken",
            "nameLocation": "893:29:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:36"
            },
            "src": "887:38:36"
          },
          {
            "documentation": {
              "id": 8234,
              "nodeType": "StructuredDocumentation",
              "src": "931:76:36",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 8236,
            "name": "TransferCallerNotOwnerNorApproved",
            "nameLocation": "1018:33:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:36"
            },
            "src": "1012:42:36"
          },
          {
            "documentation": {
              "id": 8237,
              "nodeType": "StructuredDocumentation",
              "src": "1060:53:36",
              "text": " The token must be owned by `from`."
            },
            "id": 8239,
            "name": "TransferFromIncorrectOwner",
            "nameLocation": "1124:26:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:2:36"
            },
            "src": "1118:35:36"
          },
          {
            "documentation": {
              "id": 8240,
              "nodeType": "StructuredDocumentation",
              "src": "1159:109:36",
              "text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
            },
            "id": 8242,
            "name": "TransferToNonERC721ReceiverImplementer",
            "nameLocation": "1279:38:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:36"
            },
            "src": "1273:47:36"
          },
          {
            "documentation": {
              "id": 8243,
              "nodeType": "StructuredDocumentation",
              "src": "1326:55:36",
              "text": " Cannot transfer to the zero address."
            },
            "id": 8245,
            "name": "TransferToZeroAddress",
            "nameLocation": "1392:21:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:2:36"
            },
            "src": "1386:30:36"
          },
          {
            "documentation": {
              "id": 8246,
              "nodeType": "StructuredDocumentation",
              "src": "1422:44:36",
              "text": " The token does not exist."
            },
            "id": 8248,
            "name": "URIQueryForNonexistentToken",
            "nameLocation": "1477:27:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:2:36"
            },
            "src": "1471:36:36"
          },
          {
            "documentation": {
              "id": 8249,
              "nodeType": "StructuredDocumentation",
              "src": "1513:79:36",
              "text": " The `quantity` minted with ERC2309 exceeds the safety limit."
            },
            "id": 8251,
            "name": "MintERC2309QuantityExceedsLimit",
            "nameLocation": "1603:31:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:2:36"
            },
            "src": "1597:40:36"
          },
          {
            "documentation": {
              "id": 8252,
              "nodeType": "StructuredDocumentation",
              "src": "1643:83:36",
              "text": " The `extraData` cannot be set on an unintialized ownership slot."
            },
            "id": 8254,
            "name": "OwnershipNotInitializedForExtraData",
            "nameLocation": "1737:35:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:2:36"
            },
            "src": "1731:44:36"
          },
          {
            "canonicalName": "IERC721AUpgradeable.TokenOwnership",
            "id": 8263,
            "members": [
              {
                "constant": false,
                "id": 8256,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1858:4:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "1850:12:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8255,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1850:7:36",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8258,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1971:14:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "1964:21:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 8257,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1964:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8260,
                "mutability": "mutable",
                "name": "burned",
                "nameLocation": "2046:6:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "2041:11:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8259,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2041:4:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8262,
                "mutability": "mutable",
                "name": "extraData",
                "nameLocation": "2161:9:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "2154:16:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 8261,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2154:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1788:14:36",
            "nodeType": "StructDefinition",
            "scope": 8418,
            "src": "1781:396:36",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8264,
              "nodeType": "StructuredDocumentation",
              "src": "2183:193:36",
              "text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
            },
            "functionSelector": "18160ddd",
            "id": 8269,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2390:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:2:36"
            },
            "returnParameters": {
              "id": 8268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8269,
                  "src": "2427:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:9:36"
            },
            "scope": 8418,
            "src": "2381:55:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8270,
              "nodeType": "StructuredDocumentation",
              "src": "2545:340:36",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 8277,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2899:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8272,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2924:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8277,
                  "src": "2917:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8271,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2916:20:36"
            },
            "returnParameters": {
              "id": 8276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8277,
                  "src": "2960:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8274,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:6:36"
            },
            "scope": 8418,
            "src": "2890:76:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8278,
              "nodeType": "StructuredDocumentation",
              "src": "3075:88:36",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 8286,
            "name": "Transfer",
            "nameLocation": "3174:8:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8280,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3199:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3183:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8282,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3221:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3205:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8284,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3241:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3225:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3182:67:36"
            },
            "src": "3168:82:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8287,
              "nodeType": "StructuredDocumentation",
              "src": "3256:94:36",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 8295,
            "name": "Approval",
            "nameLocation": "3361:8:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8289,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3386:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3370:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8291,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3409:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3393:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8293,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3435:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3419:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:74:36"
            },
            "src": "3355:89:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8296,
              "nodeType": "StructuredDocumentation",
              "src": "3450:117:36",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 8304,
            "name": "ApprovalForAll",
            "nameLocation": "3578:14:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8298,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3609:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3593:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8300,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3632:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3616:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3647:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3642:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8301,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:64:36"
            },
            "src": "3572:85:36"
          },
          {
            "documentation": {
              "id": 8305,
              "nodeType": "StructuredDocumentation",
              "src": "3663:76:36",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 8312,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3753:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8307,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3771:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "3763:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3762:15:36"
            },
            "returnParameters": {
              "id": 8311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8310,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3809:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "3801:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3800:17:36"
            },
            "scope": 8418,
            "src": "3744:74:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8313,
              "nodeType": "StructuredDocumentation",
              "src": "3824:131:36",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 8320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3969:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8315,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3985:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "3977:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3976:17:36"
            },
            "returnParameters": {
              "id": 8319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8318,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4025:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "4017:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4017:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4016:15:36"
            },
            "scope": 8418,
            "src": "3960:72:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8321,
              "nodeType": "StructuredDocumentation",
              "src": "4038:556:36",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 8332,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4608:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8323,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4642:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4634:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8325,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4664:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4656:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4656:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8327,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4684:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4676:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8329,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4716:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4701:19:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8328,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4624:102:36"
            },
            "returnParameters": {
              "id": 8331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4735:0:36"
            },
            "scope": 8418,
            "src": "4599:137:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8333,
              "nodeType": "StructuredDocumentation",
              "src": "4742:690:36",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 8342,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5446:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5480:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5472:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8337,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5502:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5494:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5494:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8339,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5522:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5514:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5462:73:36"
            },
            "returnParameters": {
              "id": 8341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5544:0:36"
            },
            "scope": 8418,
            "src": "5437:108:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8343,
              "nodeType": "StructuredDocumentation",
              "src": "5551:504:36",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 8352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6069:12:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8345,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6099:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6091:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6091:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8347,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6121:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6113:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6113:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8349,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6141:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6133:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6133:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6081:73:36"
            },
            "returnParameters": {
              "id": 8351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6163:0:36"
            },
            "scope": 8418,
            "src": "6060:104:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8353,
              "nodeType": "StructuredDocumentation",
              "src": "6170:452:36",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 8360,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6636:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6652:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8360,
                  "src": "6644:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6664:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8360,
                  "src": "6656:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6656:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6643:29:36"
            },
            "returnParameters": {
              "id": 8359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6681:0:36"
            },
            "scope": 8418,
            "src": "6627:55:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8361,
              "nodeType": "StructuredDocumentation",
              "src": "6688:309:36",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 8368,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "7011:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8363,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7037:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8368,
                  "src": "7029:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8365,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "7052:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8368,
                  "src": "7047:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8364,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7028:34:36"
            },
            "returnParameters": {
              "id": 8367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7071:0:36"
            },
            "scope": 8418,
            "src": "7002:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8369,
              "nodeType": "StructuredDocumentation",
              "src": "7078:139:36",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 8376,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "7231:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8371,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7251:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8376,
                  "src": "7243:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7242:17:36"
            },
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8374,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7291:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8376,
                  "src": "7283:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7282:18:36"
            },
            "scope": 8418,
            "src": "7222:79:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8377,
              "nodeType": "StructuredDocumentation",
              "src": "7307:138:36",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 8386,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7459:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8379,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7484:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7476:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7476:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8381,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7499:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7491:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7475:33:36"
            },
            "returnParameters": {
              "id": 8385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7532:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8383,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7532:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7531:6:36"
            },
            "scope": 8418,
            "src": "7450:88:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8387,
              "nodeType": "StructuredDocumentation",
              "src": "7651:58:36",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 8392,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "7723:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:36"
            },
            "returnParameters": {
              "id": 8391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8392,
                  "src": "7753:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7752:15:36"
            },
            "scope": 8418,
            "src": "7714:54:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8393,
              "nodeType": "StructuredDocumentation",
              "src": "7774:60:36",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 8398,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7848:6:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7854:2:36"
            },
            "returnParameters": {
              "id": 8397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8398,
                  "src": "7880:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7880:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7879:15:36"
            },
            "scope": 8418,
            "src": "7839:56:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8399,
              "nodeType": "StructuredDocumentation",
              "src": "7901:90:36",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 8406,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8005:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8401,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8022:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8406,
                  "src": "8014:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8014:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8013:17:36"
            },
            "returnParameters": {
              "id": 8405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8406,
                  "src": "8054:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8054:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8053:15:36"
            },
            "scope": 8418,
            "src": "7996:73:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8407,
              "nodeType": "StructuredDocumentation",
              "src": "8179:203:36",
              "text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
            },
            "id": 8417,
            "name": "ConsecutiveTransfer",
            "nameLocation": "8393:19:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8409,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromTokenId",
                  "nameLocation": "8429:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8413:27:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8413:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8411,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toTokenId",
                  "nameLocation": "8450:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8442:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8442:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8413,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8477:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8461:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8461:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8415,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8499:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8483:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8412:90:36"
            },
            "src": "8387:116:36"
          }
        ],
        "scope": 8419,
        "src": "169:8336:36",
        "usedErrors": [
          8215,
          8218,
          8221,
          8224,
          8227,
          8230,
          8233,
          8236,
          8239,
          8242,
          8245,
          8248,
          8251,
          8254
        ]
      }
    ],
    "src": "84:8422:36"
  },
  "legacyAST": {
    "absolutePath": "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol",
    "exportedSymbols": {
      "IERC721AUpgradeable": [
        8418
      ]
    },
    "id": 8419,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8211,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "84:23:36"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8212,
          "nodeType": "StructuredDocumentation",
          "src": "109:59:36",
          "text": " @dev Interface of an ERC721A compliant contract."
        },
        "fullyImplemented": false,
        "id": 8418,
        "linearizedBaseContracts": [
          8418
        ],
        "name": "IERC721AUpgradeable",
        "nameLocation": "179:19:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 8213,
              "nodeType": "StructuredDocumentation",
              "src": "205:76:36",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 8215,
            "name": "ApprovalCallerNotOwnerNorApproved",
            "nameLocation": "292:33:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:2:36"
            },
            "src": "286:42:36"
          },
          {
            "documentation": {
              "id": 8216,
              "nodeType": "StructuredDocumentation",
              "src": "334:44:36",
              "text": " The token does not exist."
            },
            "id": 8218,
            "name": "ApprovalQueryForNonexistentToken",
            "nameLocation": "389:32:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:2:36"
            },
            "src": "383:41:36"
          },
          {
            "documentation": {
              "id": 8219,
              "nodeType": "StructuredDocumentation",
              "src": "430:66:36",
              "text": " The caller cannot approve to their own address."
            },
            "id": 8221,
            "name": "ApproveToCaller",
            "nameLocation": "507:15:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:36"
            },
            "src": "501:24:36"
          },
          {
            "documentation": {
              "id": 8222,
              "nodeType": "StructuredDocumentation",
              "src": "531:65:36",
              "text": " Cannot query the balance for the zero address."
            },
            "id": 8224,
            "name": "BalanceQueryForZeroAddress",
            "nameLocation": "607:26:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:36"
            },
            "src": "601:35:36"
          },
          {
            "documentation": {
              "id": 8225,
              "nodeType": "StructuredDocumentation",
              "src": "642:51:36",
              "text": " Cannot mint to the zero address."
            },
            "id": 8227,
            "name": "MintToZeroAddress",
            "nameLocation": "704:17:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:2:36"
            },
            "src": "698:26:36"
          },
          {
            "documentation": {
              "id": 8228,
              "nodeType": "StructuredDocumentation",
              "src": "730:72:36",
              "text": " The quantity of tokens minted must be more than zero."
            },
            "id": 8230,
            "name": "MintZeroQuantity",
            "nameLocation": "813:16:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:36"
            },
            "src": "807:25:36"
          },
          {
            "documentation": {
              "id": 8231,
              "nodeType": "StructuredDocumentation",
              "src": "838:44:36",
              "text": " The token does not exist."
            },
            "id": 8233,
            "name": "OwnerQueryForNonexistentToken",
            "nameLocation": "893:29:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:36"
            },
            "src": "887:38:36"
          },
          {
            "documentation": {
              "id": 8234,
              "nodeType": "StructuredDocumentation",
              "src": "931:76:36",
              "text": " The caller must own the token or be an approved operator."
            },
            "id": 8236,
            "name": "TransferCallerNotOwnerNorApproved",
            "nameLocation": "1018:33:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:36"
            },
            "src": "1012:42:36"
          },
          {
            "documentation": {
              "id": 8237,
              "nodeType": "StructuredDocumentation",
              "src": "1060:53:36",
              "text": " The token must be owned by `from`."
            },
            "id": 8239,
            "name": "TransferFromIncorrectOwner",
            "nameLocation": "1124:26:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:2:36"
            },
            "src": "1118:35:36"
          },
          {
            "documentation": {
              "id": 8240,
              "nodeType": "StructuredDocumentation",
              "src": "1159:109:36",
              "text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
            },
            "id": 8242,
            "name": "TransferToNonERC721ReceiverImplementer",
            "nameLocation": "1279:38:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:36"
            },
            "src": "1273:47:36"
          },
          {
            "documentation": {
              "id": 8243,
              "nodeType": "StructuredDocumentation",
              "src": "1326:55:36",
              "text": " Cannot transfer to the zero address."
            },
            "id": 8245,
            "name": "TransferToZeroAddress",
            "nameLocation": "1392:21:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:2:36"
            },
            "src": "1386:30:36"
          },
          {
            "documentation": {
              "id": 8246,
              "nodeType": "StructuredDocumentation",
              "src": "1422:44:36",
              "text": " The token does not exist."
            },
            "id": 8248,
            "name": "URIQueryForNonexistentToken",
            "nameLocation": "1477:27:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:2:36"
            },
            "src": "1471:36:36"
          },
          {
            "documentation": {
              "id": 8249,
              "nodeType": "StructuredDocumentation",
              "src": "1513:79:36",
              "text": " The `quantity` minted with ERC2309 exceeds the safety limit."
            },
            "id": 8251,
            "name": "MintERC2309QuantityExceedsLimit",
            "nameLocation": "1603:31:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:2:36"
            },
            "src": "1597:40:36"
          },
          {
            "documentation": {
              "id": 8252,
              "nodeType": "StructuredDocumentation",
              "src": "1643:83:36",
              "text": " The `extraData` cannot be set on an unintialized ownership slot."
            },
            "id": 8254,
            "name": "OwnershipNotInitializedForExtraData",
            "nameLocation": "1737:35:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1772:2:36"
            },
            "src": "1731:44:36"
          },
          {
            "canonicalName": "IERC721AUpgradeable.TokenOwnership",
            "id": 8263,
            "members": [
              {
                "constant": false,
                "id": 8256,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1858:4:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "1850:12:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8255,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1850:7:36",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8258,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1971:14:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "1964:21:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 8257,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1964:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8260,
                "mutability": "mutable",
                "name": "burned",
                "nameLocation": "2046:6:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "2041:11:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8259,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2041:4:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8262,
                "mutability": "mutable",
                "name": "extraData",
                "nameLocation": "2161:9:36",
                "nodeType": "VariableDeclaration",
                "scope": 8263,
                "src": "2154:16:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 8261,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2154:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1788:14:36",
            "nodeType": "StructDefinition",
            "scope": 8418,
            "src": "1781:396:36",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8264,
              "nodeType": "StructuredDocumentation",
              "src": "2183:193:36",
              "text": " @dev Returns the total amount of tokens stored by the contract.\n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
            },
            "functionSelector": "18160ddd",
            "id": 8269,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2390:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2401:2:36"
            },
            "returnParameters": {
              "id": 8268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8269,
                  "src": "2427:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:9:36"
            },
            "scope": 8418,
            "src": "2381:55:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8270,
              "nodeType": "StructuredDocumentation",
              "src": "2545:340:36",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 8277,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2899:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8272,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2924:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8277,
                  "src": "2917:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8271,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2916:20:36"
            },
            "returnParameters": {
              "id": 8276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8277,
                  "src": "2960:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8274,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:6:36"
            },
            "scope": 8418,
            "src": "2890:76:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8278,
              "nodeType": "StructuredDocumentation",
              "src": "3075:88:36",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 8286,
            "name": "Transfer",
            "nameLocation": "3174:8:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8280,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3199:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3183:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8282,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3221:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3205:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8284,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3241:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8286,
                  "src": "3225:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3182:67:36"
            },
            "src": "3168:82:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8287,
              "nodeType": "StructuredDocumentation",
              "src": "3256:94:36",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 8295,
            "name": "Approval",
            "nameLocation": "3361:8:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8289,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3386:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3370:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8291,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3409:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3393:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3393:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8293,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3435:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8295,
                  "src": "3419:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:74:36"
            },
            "src": "3355:89:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8296,
              "nodeType": "StructuredDocumentation",
              "src": "3450:117:36",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 8304,
            "name": "ApprovalForAll",
            "nameLocation": "3578:14:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8298,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3609:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3593:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3593:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8300,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3632:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3616:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3647:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8304,
                  "src": "3642:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8301,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:64:36"
            },
            "src": "3572:85:36"
          },
          {
            "documentation": {
              "id": 8305,
              "nodeType": "StructuredDocumentation",
              "src": "3663:76:36",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 8312,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3753:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8307,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3771:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "3763:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3762:15:36"
            },
            "returnParameters": {
              "id": 8311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8310,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3809:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8312,
                  "src": "3801:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3800:17:36"
            },
            "scope": 8418,
            "src": "3744:74:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8313,
              "nodeType": "StructuredDocumentation",
              "src": "3824:131:36",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 8320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3969:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8315,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3985:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "3977:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3976:17:36"
            },
            "returnParameters": {
              "id": 8319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8318,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4025:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8320,
                  "src": "4017:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4017:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4016:15:36"
            },
            "scope": 8418,
            "src": "3960:72:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8321,
              "nodeType": "StructuredDocumentation",
              "src": "4038:556:36",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 8332,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4608:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8323,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4642:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4634:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8325,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4664:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4656:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4656:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8327,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4684:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4676:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8329,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4716:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8332,
                  "src": "4701:19:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8328,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4624:102:36"
            },
            "returnParameters": {
              "id": 8331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4735:0:36"
            },
            "scope": 8418,
            "src": "4599:137:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8333,
              "nodeType": "StructuredDocumentation",
              "src": "4742:690:36",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 8342,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5446:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5480:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5472:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8337,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5502:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5494:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5494:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8339,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5522:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "5514:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5462:73:36"
            },
            "returnParameters": {
              "id": 8341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5544:0:36"
            },
            "scope": 8418,
            "src": "5437:108:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8343,
              "nodeType": "StructuredDocumentation",
              "src": "5551:504:36",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 8352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6069:12:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8345,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6099:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6091:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6091:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8347,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6121:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6113:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6113:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8349,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6141:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8352,
                  "src": "6133:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6133:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6081:73:36"
            },
            "returnParameters": {
              "id": 8351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6163:0:36"
            },
            "scope": 8418,
            "src": "6060:104:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8353,
              "nodeType": "StructuredDocumentation",
              "src": "6170:452:36",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 8360,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6636:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6652:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8360,
                  "src": "6644:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6664:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8360,
                  "src": "6656:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6656:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6643:29:36"
            },
            "returnParameters": {
              "id": 8359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6681:0:36"
            },
            "scope": 8418,
            "src": "6627:55:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8361,
              "nodeType": "StructuredDocumentation",
              "src": "6688:309:36",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 8368,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "7011:17:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8363,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7037:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8368,
                  "src": "7029:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8365,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "7052:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8368,
                  "src": "7047:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8364,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7028:34:36"
            },
            "returnParameters": {
              "id": 8367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7071:0:36"
            },
            "scope": 8418,
            "src": "7002:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8369,
              "nodeType": "StructuredDocumentation",
              "src": "7078:139:36",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 8376,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "7231:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8371,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7251:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8376,
                  "src": "7243:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7243:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7242:17:36"
            },
            "returnParameters": {
              "id": 8375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8374,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7291:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8376,
                  "src": "7283:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7282:18:36"
            },
            "scope": 8418,
            "src": "7222:79:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8377,
              "nodeType": "StructuredDocumentation",
              "src": "7307:138:36",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 8386,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7459:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8379,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7484:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7476:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7476:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8381,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7499:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7491:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7475:33:36"
            },
            "returnParameters": {
              "id": 8385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8386,
                  "src": "7532:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8383,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7532:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7531:6:36"
            },
            "scope": 8418,
            "src": "7450:88:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8387,
              "nodeType": "StructuredDocumentation",
              "src": "7651:58:36",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 8392,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "7723:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7727:2:36"
            },
            "returnParameters": {
              "id": 8391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8392,
                  "src": "7753:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7753:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7752:15:36"
            },
            "scope": 8418,
            "src": "7714:54:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8393,
              "nodeType": "StructuredDocumentation",
              "src": "7774:60:36",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 8398,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7848:6:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7854:2:36"
            },
            "returnParameters": {
              "id": 8397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8398,
                  "src": "7880:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7880:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7879:15:36"
            },
            "scope": 8418,
            "src": "7839:56:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8399,
              "nodeType": "StructuredDocumentation",
              "src": "7901:90:36",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 8406,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8005:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8401,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8022:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8406,
                  "src": "8014:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8014:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8013:17:36"
            },
            "returnParameters": {
              "id": 8405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8406,
                  "src": "8054:13:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8054:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8053:15:36"
            },
            "scope": 8418,
            "src": "7996:73:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8407,
              "nodeType": "StructuredDocumentation",
              "src": "8179:203:36",
              "text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`,\n as defined in the ERC2309 standard. See `_mintERC2309` for more details."
            },
            "id": 8417,
            "name": "ConsecutiveTransfer",
            "nameLocation": "8393:19:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8409,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromTokenId",
                  "nameLocation": "8429:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8413:27:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8413:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8411,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toTokenId",
                  "nameLocation": "8450:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8442:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8442:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8413,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8477:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8461:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8461:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8415,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8499:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "8483:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8412:90:36"
            },
            "src": "8387:116:36"
          }
        ],
        "scope": 8419,
        "src": "169:8336:36",
        "usedErrors": [
          8215,
          8218,
          8221,
          8224,
          8227,
          8230,
          8233,
          8236,
          8239,
          8242,
          8245,
          8248,
          8251,
          8254
        ]
      }
    ],
    "src": "84:8422:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2022-07-11T09:51:37.984Z",
  "devdoc": {
    "details": "Interface of an ERC721A compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "ConsecutiveTransfer(uint256,uint256,address,address)": {
        "details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the ERC2309 standard. See `_mintERC2309` for more details."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenURI(uint256)": {
        "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
      },
      "totalSupply()": {
        "details": "Returns the total amount of tokens stored by the contract. Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "ApprovalCallerNotOwnerNorApproved()": [
        {
          "notice": "The caller must own the token or be an approved operator."
        }
      ],
      "ApprovalQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ],
      "ApproveToCaller()": [
        {
          "notice": "The caller cannot approve to their own address."
        }
      ],
      "BalanceQueryForZeroAddress()": [
        {
          "notice": "Cannot query the balance for the zero address."
        }
      ],
      "MintERC2309QuantityExceedsLimit()": [
        {
          "notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
        }
      ],
      "MintToZeroAddress()": [
        {
          "notice": "Cannot mint to the zero address."
        }
      ],
      "MintZeroQuantity()": [
        {
          "notice": "The quantity of tokens minted must be more than zero."
        }
      ],
      "OwnerQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ],
      "OwnershipNotInitializedForExtraData()": [
        {
          "notice": "The `extraData` cannot be set on an unintialized ownership slot."
        }
      ],
      "TransferCallerNotOwnerNorApproved()": [
        {
          "notice": "The caller must own the token or be an approved operator."
        }
      ],
      "TransferFromIncorrectOwner()": [
        {
          "notice": "The token must be owned by `from`."
        }
      ],
      "TransferToNonERC721ReceiverImplementer()": [
        {
          "notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
        }
      ],
      "TransferToZeroAddress()": [
        {
          "notice": "Cannot transfer to the zero address."
        }
      ],
      "URIQueryForNonexistentToken()": [
        {
          "notice": "The token does not exist."
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
